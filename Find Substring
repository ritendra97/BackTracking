import java.util.*;

public class BackTracking {

	public static void subString(String str, String psf) {

		int n = str.length();
 
		if(str.length()==0) {
			System.out.println(psf);
			return;
		}
			
		for (int i = 0; i < str.length(); i++) {

			char ch = str.charAt(i);
			String left = str.substring(0, i);
			String right = str.substring(i + 1);

			String total = left + right;

			subString(total, psf + ch);
		}
	}

	public static void main(String[] args) {

		String str = "abc";
		subString(str, "");
	}

}
// O(n^3) Time Complexity

import java.util.*;

/*
   n = 4, arr1[] = [1 3 5 7]; 
   m = 5, arr2[] = [0 2 6 8 9];
*/

public class StringPractice {

	public static void allSubstring(String str) {
		
		for(int i=0;i<str.length();i++) {
			
			for(int j=i;j<str.length();j++) {
				
				for(int k=i;k<=j;k++) {
					System.out.print(str.charAt(k));
				}
				
				System.out.println();
			}
		}
	}
	public static void main(String[] args) {
		String str = "abcd";
		allSubstring(str);
	}

}
